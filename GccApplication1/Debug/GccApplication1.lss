
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000080  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000d4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000104  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000140  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005d6  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000527  00000000  00000000  00000736  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000260  00000000  00000000  00000c5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000ec0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000324  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000090  00000000  00000000  00001208  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001298  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	23 c0       	rjmp	.+70     	; 0x7c <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
int main(void)
{
	
	
	
	DDRD |= (1 << 5)|(1 << 6)|(1 << 7);
  38:	81 b3       	in	r24, 0x11	; 17
  3a:	80 6e       	ori	r24, 0xE0	; 224
  3c:	81 bb       	out	0x11, r24	; 17
	DDRB |= (1 << 0);
  3e:	b8 9a       	sbi	0x17, 0	; 23
	
	DDRC &= ~((1 << 0)|(1 << 1)|(1 << 2)|(1 << 3));
  40:	84 b3       	in	r24, 0x14	; 20
  42:	80 7f       	andi	r24, 0xF0	; 240
  44:	84 bb       	out	0x14, r24	; 20
	PORTC &= ~((1 << 0)|(1 << 1)|(1 << 2)|(1 << 3));
  46:	85 b3       	in	r24, 0x15	; 21
  48:	80 7f       	andi	r24, 0xF0	; 240
  4a:	85 bb       	out	0x15, r24	; 21
	
	
    while (1) 
    {
		if(!(PINC & (1 << 0)))
  4c:	98 9b       	sbis	0x13, 0	; 19
		{
			PORTD |= (1 << 6);
  4e:	96 9a       	sbi	0x12, 6	; 18
		}
		
		PORTD |= (1 << 5);
  50:	95 9a       	sbi	0x12, 5	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  52:	2f e9       	ldi	r18, 0x9F	; 159
  54:	86 e8       	ldi	r24, 0x86	; 134
  56:	91 e0       	ldi	r25, 0x01	; 1
  58:	21 50       	subi	r18, 0x01	; 1
  5a:	80 40       	sbci	r24, 0x00	; 0
  5c:	90 40       	sbci	r25, 0x00	; 0
  5e:	e1 f7       	brne	.-8      	; 0x58 <__SREG__+0x19>
  60:	00 c0       	rjmp	.+0      	; 0x62 <__SREG__+0x23>
  62:	00 00       	nop
		_delay_ms(500);
		PORTD &=~ (1 << 5);
  64:	95 98       	cbi	0x12, 5	; 18
  66:	2f e9       	ldi	r18, 0x9F	; 159
  68:	86 e8       	ldi	r24, 0x86	; 134
  6a:	91 e0       	ldi	r25, 0x01	; 1
  6c:	21 50       	subi	r18, 0x01	; 1
  6e:	80 40       	sbci	r24, 0x00	; 0
  70:	90 40       	sbci	r25, 0x00	; 0
  72:	e1 f7       	brne	.-8      	; 0x6c <__SREG__+0x2d>
  74:	00 c0       	rjmp	.+0      	; 0x76 <__SREG__+0x37>
  76:	00 00       	nop
		_delay_ms(500);
		
		PORTD &= ~(1 << 6);
  78:	96 98       	cbi	0x12, 6	; 18
	
	DDRC &= ~((1 << 0)|(1 << 1)|(1 << 2)|(1 << 3));
	PORTC &= ~((1 << 0)|(1 << 1)|(1 << 2)|(1 << 3));
	
	
    while (1) 
  7a:	e8 cf       	rjmp	.-48     	; 0x4c <__SREG__+0xd>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>
